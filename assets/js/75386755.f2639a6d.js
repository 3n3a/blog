"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4259],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(t),h=i,m=p["".concat(o,".").concat(h)]||p[h]||d[h]||s;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,l=new Array(s);l[0]=p;var a={};for(var o in n)hasOwnProperty.call(n,o)&&(a[o]=n[o]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<s;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1332:function(e,n,t){t.r(n),t.d(n,{assets:function(){return o},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return a},toc:function(){return u}});var r=t(3117),i=(t(7294),t(3905));const s={title:"Ein JavaScript-Webserver mit Express.js implementieren",date:new Date("2023-01-16T13:42:00.000Z"),draft:!1,authors:"enk",tags:["tutorial","node-js","express-js"]},l=void 0,a={permalink:"/node-express-hallo-welt",editUrl:"https://github.com/3n3a/blog/tree/master/blog/node-express-hallo-welt.md",source:"@site/blog/node-express-hallo-welt.md",title:"Ein JavaScript-Webserver mit Express.js implementieren",description:"Ein JavaScript-Webserver mit Express.js zu implementieren ist einfach und schnell. Express.js ist ein leichtgewichtiges Framework f\xfcr Node.js, das es Entwicklern erm\xf6glicht, einen Webserver zu erstellen und zu verwalten. In diesem Essay werden wir Schritt f\xfcr Schritt durch den Prozess gehen, um einen einfachen Webserver mit Express.js zu erstellen.",date:"2023-01-16T13:42:00.000Z",formattedDate:"January 16, 2023",tags:[{label:"tutorial",permalink:"/tags/tutorial"},{label:"node-js",permalink:"/tags/node-js"},{label:"express-js",permalink:"/tags/express-js"}],readingTime:2.455,hasTruncateMarker:!0,authors:[{name:"Enea Kr\xe4henb\xfchl",title:"Software Developer",url:"https://3n3a.ch",imageURL:"img/favicon.ico",key:"enk"}],frontMatter:{title:"Ein JavaScript-Webserver mit Express.js implementieren",date:"2023-01-16T13:42:00.000Z",draft:!1,authors:"enk",tags:["tutorial","node-js","express-js"]},prevItem:{title:'A Guide to Creating a "Hello World" Webserver in C',permalink:"/webserver-c"},nextItem:{title:"Create a Blog with Phoenix in Elixir.",permalink:"/phoenix_blog_tutorial"}},o={authorsImageUrls:[void 0]},u=[{value:"Schritt 1: Node.js installieren",id:"schritt-1-nodejs-installieren",level:2},{value:"Schritt 2: Projekt erstellen",id:"schritt-2-projekt-erstellen",level:2},{value:"Schritt 3: Express.js installieren",id:"schritt-3-expressjs-installieren",level:2},{value:"Schritt 4: Code schreiben",id:"schritt-4-code-schreiben",level:2},{value:"Schritt 5: Server starten",id:"schritt-5-server-starten",level:2}],c={toc:u};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Ein JavaScript-Webserver mit Express.js zu implementieren ist einfach und schnell. Express.js ist ein leichtgewichtiges Framework f\xfcr Node.js, das es Entwicklern erm\xf6glicht, einen Webserver zu erstellen und zu verwalten. In diesem Essay werden wir Schritt f\xfcr Schritt durch den Prozess gehen, um einen einfachen Webserver mit Express.js zu erstellen."),(0,i.kt)("h2",{id:"schritt-1-nodejs-installieren"},"Schritt 1: Node.js installieren"),(0,i.kt)("p",null,"Der erste Schritt bei der Implementierung eines Webservers mit Express.js ist die Installation von Node.js. Node.js ist eine JavaScript-Laufzeitumgebung, die es erm\xf6glicht, JavaScript-Code auf dem Server auszuf\xfchren. Wenn Sie Node.js noch nicht auf Ihrem Computer installiert haben, k\xf6nnen Sie es von der offiziellen Node.js-Website herunterladen und installieren."),(0,i.kt)("h2",{id:"schritt-2-projekt-erstellen"},"Schritt 2: Projekt erstellen"),(0,i.kt)("p",null,'Nachdem Node.js installiert ist, k\xf6nnen Sie mit dem n\xe4chsten Schritt fortfahren, dem Erstellen eines neuen Projekts. Erstellen Sie ein neues Verzeichnis f\xfcr Ihr Projekt und wechseln Sie in dieses Verzeichnis. \xd6ffnen Sie dann eine Kommandozeile oder eine Eingabeaufforderung und geben Sie den Befehl npm init ein. Dieser Befehl erstellt eine "package.json"-Datei, die die Abh\xe4ngigkeiten und andere Informationen Ihres Projekts enth\xe4lt. Folgen Sie den Anweisungen auf dem Bildschirm, um die Datei zu erstellen.'),(0,i.kt)("h2",{id:"schritt-3-expressjs-installieren"},"Schritt 3: Express.js installieren"),(0,i.kt)("p",null,"Nun k\xf6nnen Sie Express.js installieren, indem Sie den Befehl npm install express auf der Kommandozeile eingeben. Dieser Befehl installiert das Express.js-Modul und alle seine Abh\xe4ngigkeiten in Ihrem Projekt."),(0,i.kt)("h2",{id:"schritt-4-code-schreiben"},"Schritt 4: Code schreiben"),(0,i.kt)("p",null,'Nach der Installation von Express.js k\xf6nnen Sie mit dem Schreiben des Codes f\xfcr Ihren Webserver beginnen. Erstellen Sie eine neue Datei mit dem Namen "server.js" im Root-Verzeichnis Ihres Projekts. \xd6ffnen Sie diese Datei in einem Texteditor Ihrer Wahl und f\xfcgen Sie den folgenden Code hinzu:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst app = express();\n\napp.get('/', function(req, res){\n    res.send('Hallo Welt!');\n});\n\napp.listen(3000, function(){\nconsole.log('Der Server l\xe4uft auf Port 3000');\n});\n")),(0,i.kt)("p",null,'Dieser Code erstellt eine neue Express-Anwendung und legt einen GET-Endpunkt f\xfcr die Root-Route fest. Jedes Mal, wenn ein Benutzer die URL Ihres Servers aufruft, wird die angegebene Funktion ausgef\xfchrt und der Text "Hallo Welt!" an den Benutzer zur\xfcckgegeben. Der letzte Befehl in diesem Code, ',(0,i.kt)("inlineCode",{parentName:"p"},"app.listen(3000, function(){...})"),", sagt dem Server, dass er auf Port 3000 auf Anfragen lauschen soll."),(0,i.kt)("h2",{id:"schritt-5-server-starten"},"Schritt 5: Server starten"),(0,i.kt)("p",null,"Jetzt k\xf6nnen Sie Ihren Server starten, indem Sie den Befehl ",(0,i.kt)("inlineCode",{parentName:"p"},"node server.js"),' in der Kommandozeile ausf\xfchren. Wenn alles erfolgreich eingerichtet wurde, sollte die Ausgabe "Der Server l\xe4uft auf Port 3000" im Terminal erscheinen. Sie k\xf6nnen nun die URL "http://localhost:3000" in Ihrem Browser aufrufen und sollten den Text "Hallo Welt!" sehen.'),(0,i.kt)("p",null,"Mit Express.js k\xf6nnen Sie auch weitere Routen und Funktionalit\xe4ten hinzuf\xfcgen, wie z.B. das Verarbeiten von Formulardaten, das Verwalten von Sitzungen und Cookies und das Arbeiten mit Datenbanken. Es gibt viele Ressourcen im Internet, die Ihnen helfen, Ihren Wissensstand in Bezug auf Express.js und Node.js zu vertiefen."),(0,i.kt)("p",null,"In Zusammenfassung, Express.js ist ein m\xe4chtiges Framework f\xfcr Node.js, das es Entwicklern erm\xf6glicht, einen Webserver schnell und einfach zu erstellen. Durch die Schritte, die in diesem Essay beschrieben wurden, k\xf6nnen Sie jetzt Ihren eigenen einfachen Webserver mit Express.js implementieren und darauf aufbauen, um weitere Funktionalit\xe4ten hinzuzuf\xfcgen."))}d.isMDXComponent=!0}}]);