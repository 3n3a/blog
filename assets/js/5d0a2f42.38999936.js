"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5574],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1860:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s}});var r=n(3117),a=(n(7294),n(3905));const o={title:"Hackernews Client with Hackerfeed API",date:new Date("2021-08-11T16:00:00.000Z"),draft:!1,authors:"enk",tags:["hackernews","api"]},i=void 0,l={permalink:"/hackernews_client",editUrl:"https://github.com/3n3a/blog/tree/master/blog/hackernews_client.md",source:"@site/blog/hackernews_client.md",title:"Hackernews Client with Hackerfeed API",description:"My idea was to develop a hackernews client, I know so many others exist already. But I wanted to try for myself.",date:"2021-08-11T16:00:00.000Z",formattedDate:"August 11, 2021",tags:[{label:"hackernews",permalink:"/tags/hackernews"},{label:"api",permalink:"/tags/api"}],readingTime:.885,hasTruncateMarker:!0,authors:[{name:"Enea Kr\xe4henb\xfchl",title:"Software Developer",url:"https://3n3a.ch",imageURL:"img/favicon.ico",key:"enk"}],frontMatter:{title:"Hackernews Client with Hackerfeed API",date:"2021-08-11T16:00:00.000Z",draft:!1,authors:"enk",tags:["hackernews","api"]},prevItem:{title:'A Guide to Creating a "Hello World" Webserver in C',permalink:"/webserver-c"},nextItem:{title:"Interview Kol Deda, Autor",permalink:"/interview_kol_deda"}},c={authorsImageUrls:[void 0]},s=[{value:"Final Result",id:"final-result",level:2},{value:"Reflection",id:"reflection",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"My idea was to develop a hackernews client, I know so many others exist already. But I wanted to try for myself."),(0,a.kt)("p",null,"I started out by finding an API that would allow me to lean back and relax. This API is called ",(0,a.kt)("a",{parentName:"p",href:"https://hackerfeed.dev"},"hackerfeed.dev"),", I believe to have found it on hackernews."),(0,a.kt)("p",null,"Afterwards I moved onto designing the Frontend, for this I wanted to use pre-made bootstrap components. For that I used MDBootstrap, a Framework that combines Material, from Google and Bootstrap into one capitalistic creation."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://ik.imagekit.io/njhey0rxzni/code_snippets/A1AF7D3E-67E1-4D94-BE20-8D9FEF870C1F_KG4KPathGn.png?updatedAt=1628745888583&tr=w-1104,h-736,fo-auto",alt:null})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"A code snippet from the index.html. The classes correspond to MDBootstrap")),(0,a.kt)("h2",{id:"final-result"},"Final Result"),(0,a.kt)("p",null,"The result can be seen ",(0,a.kt)("a",{parentName:"p",href:"https://gh.3n3a.ch/hnfee_mdb/"},"here"),". It doesn\u2019t work aswell as I wanted it to. But upon preloding the API response times got a little bit better. "),(0,a.kt)("h2",{id:"reflection"},"Reflection"),(0,a.kt)("p",null,"For another project I would want to better know about fetching API responses from load or background fetching. Maybe even with a service worker."),(0,a.kt)("p",null,"Also I wouldn\u2018t use MDBootstrap again, first of all, because it\u2019s not free and secondarily because I like Tailwind and co more :)."))}p.isMDXComponent=!0}}]);